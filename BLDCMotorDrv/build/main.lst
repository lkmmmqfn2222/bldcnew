ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB134:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "dma.h"
  25:Src/main.c    **** #include "tim.h"
  26:Src/main.c    **** #include "usart.h"
  27:Src/main.c    **** #include "gpio.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN Includes */
  31:Src/main.c    **** #include "myprint.h"
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 2


  32:Src/main.c    **** #include "bldc.h"
  33:Src/main.c    **** #include "keyscan.h"
  34:Src/main.c    **** /* USER CODE END Includes */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* USER CODE END PTD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PD */
  43:Src/main.c    **** /* USER CODE END PD */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  46:Src/main.c    **** /* USER CODE BEGIN PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PM */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** extern HALL hallTree;
  54:Src/main.c    **** extern STATE stateContr;
  55:Src/main.c    **** extern PIDREG_T piSpd;
  56:Src/main.c    **** extern PIDREG_T piICurr;
  57:Src/main.c    **** extern volatile uint16_t ADC_DualConvertValTab[5];
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PFP */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /**
  72:Src/main.c    ****   * @brief  The application entry point.
  73:Src/main.c    ****   * @retval int
  74:Src/main.c    ****   */
  75:Src/main.c    **** int main(void)
  76:Src/main.c    **** {
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE END 1 */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Src/main.c    ****   HAL_Init();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END Init */
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Configure the system clock */
  91:Src/main.c    ****   SystemClock_Config();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END SysInit */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Initialize all configured peripherals */
  98:Src/main.c    ****   MX_GPIO_Init();
  99:Src/main.c    ****   MX_DMA_Init();
 100:Src/main.c    ****   MX_ADC1_Init();
 101:Src/main.c    ****   MX_USART1_UART_Init();
 102:Src/main.c    ****   MX_TIM1_Init();
 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 104:Src/main.c    ****   HAL_TIM_PWM_MspInit(&htim1);
 105:Src/main.c    ****   PID_Init();
 106:Src/main.c    ****   threeHallPara_Init();
 107:Src/main.c    ****   uint32_t ad1, ad2, ad3, ad4, ad5;
 108:Src/main.c    ****   if (HAL_ADC_Start_DMA(&hadc1, (uint32_t *)&ADC_DualConvertValTab, 5) != HAL_OK)
 109:Src/main.c    ****   {
 110:Src/main.c    ****     while (1)
 111:Src/main.c    ****     {
 112:Src/main.c    ****       myPrint("error code:hall_dma_error!\r\n");
 113:Src/main.c    ****     }
 114:Src/main.c    ****     HAL_NVIC_DisableIRQ(DMA2_Stream0_IRQn);
 115:Src/main.c    ****   }
 116:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK)//start it will cause motor en
 117:Src/main.c    ****   {
 118:Src/main.c    ****     while (1)
 119:Src/main.c    ****     {
 120:Src/main.c    ****       myPrint("error code:hall_base_start_it_error!\r\n ");
 121:Src/main.c    ****     }
 122:Src/main.c    ****   }
 123:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 124:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 125:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 126:Src/main.c    ****   __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, 499);
 127:Src/main.c    ****   __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_2, 499);
 128:Src/main.c    ****   __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_3, 499);
 129:Src/main.c    ****   stateContr.controlMode = LOOP;
 130:Src/main.c    ****   switch (stateContr.controlMode)
 131:Src/main.c    ****   {
 132:Src/main.c    ****   case 0x1:
 133:Src/main.c    ****   {
 134:Src/main.c    ****     stateContr.aimSpeed = 100;
 135:Src/main.c    ****     stateContr.aimDuty = 1000 * stateContr.aimSpeed / 100;
 136:Src/main.c    ****   }
 137:Src/main.c    ****   break;
 138:Src/main.c    ****   case 0x2:
 139:Src/main.c    ****   {
 140:Src/main.c    ****     piSpd.ref = 500;
 141:Src/main.c    ****   }
 142:Src/main.c    ****   break;
 143:Src/main.c    ****   case 0x3:
 144:Src/main.c    ****   {
 145:Src/main.c    ****     piSpd.ref = 500;
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 4


 146:Src/main.c    ****   }
 147:Src/main.c    ****   break;
 148:Src/main.c    ****   }
 149:Src/main.c    ****   /* USER CODE END 2 */
 150:Src/main.c    **** 
 151:Src/main.c    ****   /* Infinite loop */
 152:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 153:Src/main.c    ****   while (1)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     /* USER CODE END WHILE */
 156:Src/main.c    ****   
 157:Src/main.c    ****     /* USER CODE BEGIN 3 */
 158:Src/main.c    ****   #if 1
 159:Src/main.c    ****     HAL_Delay(20);
 160:Src/main.c    ****     ad1 = ADC_DualConvertValTab[0];
 161:Src/main.c    ****     ad2 = ADC_DualConvertValTab[1];
 162:Src/main.c    ****     ad3 = ADC_DualConvertValTab[2];
 163:Src/main.c    ****     ad4 = ADC_DualConvertValTab[3];
 164:Src/main.c    ****     ad5 = ADC_DualConvertValTab[4];
 165:Src/main.c    ****     //__HAL_TIM_SetCompare(&htim1,TIM_CHANNEL_1,ad1);
 166:Src/main.c    ****     //__HAL_TIM_SetCompare(&htim1,TIM_CHANNEL_2,ad2);
 167:Src/main.c    ****     myPrint("ADC VALUE IS: %d mV| %d mV| %d mV| %d mV| %d mV;\
 168:Src/main.c    ****             TIM CCR VALUE IS %d %d %d \
 169:Src/main.c    ****             hallState is: %d \
 170:Src/main.c    ****             Hall status is %d %d %d ctrl mode :%d\r\n",
 171:Src/main.c    ****             ad1 * 3300 / 4096, ad2 * 3300 / 4096, ad3 * 3300 / 4096, ad4 * 3300 / 4096, ad5 * 3300 
 172:Src/main.c    ****             TIM1->CCR1, TIM1->CCR2, TIM1->CCR3,\
 173:Src/main.c    ****             hallTree.hallState,\
 174:Src/main.c    ****             hallTree.hallUVW[0], hallTree.hallUVW[1], hallTree.hallUVW[2], stateContr.controlMode);
 175:Src/main.c    ****     keyScan();
 176:Src/main.c    ****   #endif
 177:Src/main.c    ****   //motorTestProgram();
 178:Src/main.c    ****   // myPrint("HALL TABLE IS %d %d %d \r\n",HALL_U_STATUS,HALL_V_STATUS,HALL_W_STATUS);
 179:Src/main.c    ****   // HAL_Delay(20);
 180:Src/main.c    ****   }
 181:Src/main.c    ****   /* USER CODE END 3 */
 182:Src/main.c    **** }
 183:Src/main.c    **** 
 184:Src/main.c    **** /**
 185:Src/main.c    ****   * @brief System Clock Configuration
 186:Src/main.c    ****   * @retval None
 187:Src/main.c    ****   */
 188:Src/main.c    **** void SystemClock_Config(void)
 189:Src/main.c    **** {
  28              		.loc 1 189 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 80
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 95B0     		sub	sp, sp, #84
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 96
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 5


 190:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 190 0
  42 0004 3022     		movs	r2, #48
  43 0006 0021     		movs	r1, #0
  44 0008 08A8     		add	r0, sp, #32
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 191:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 191 0
  48 000e 0024     		movs	r4, #0
  49 0010 0394     		str	r4, [sp, #12]
  50 0012 0494     		str	r4, [sp, #16]
  51 0014 0594     		str	r4, [sp, #20]
  52 0016 0694     		str	r4, [sp, #24]
  53 0018 0794     		str	r4, [sp, #28]
  54              	.LBB2:
 192:Src/main.c    **** 
 193:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 194:Src/main.c    ****   */
 195:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 195 0
  56 001a 0194     		str	r4, [sp, #4]
  57 001c 1C4B     		ldr	r3, .L3
  58 001e 1A6C     		ldr	r2, [r3, #64]
  59 0020 42F08052 		orr	r2, r2, #268435456
  60 0024 1A64     		str	r2, [r3, #64]
  61 0026 1B6C     		ldr	r3, [r3, #64]
  62 0028 03F08053 		and	r3, r3, #268435456
  63 002c 0193     		str	r3, [sp, #4]
  64 002e 019B     		ldr	r3, [sp, #4]
  65              	.LBE2:
  66              	.LBB3:
 196:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  67              		.loc 1 196 0
  68 0030 0294     		str	r4, [sp, #8]
  69 0032 184B     		ldr	r3, .L3+4
  70 0034 1A68     		ldr	r2, [r3]
  71 0036 42F48042 		orr	r2, r2, #16384
  72 003a 1A60     		str	r2, [r3]
  73 003c 1B68     		ldr	r3, [r3]
  74 003e 03F48043 		and	r3, r3, #16384
  75 0042 0293     		str	r3, [sp, #8]
  76 0044 029B     		ldr	r3, [sp, #8]
  77              	.LBE3:
 197:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 198:Src/main.c    ****   */
 199:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  78              		.loc 1 199 0
  79 0046 0123     		movs	r3, #1
  80 0048 0893     		str	r3, [sp, #32]
 200:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  81              		.loc 1 200 0
  82 004a 4FF48033 		mov	r3, #65536
  83 004e 0993     		str	r3, [sp, #36]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  84              		.loc 1 201 0
  85 0050 0225     		movs	r5, #2
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 6


  86 0052 0E95     		str	r5, [sp, #56]
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  87              		.loc 1 202 0
  88 0054 4FF48003 		mov	r3, #4194304
  89 0058 0F93     		str	r3, [sp, #60]
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
  90              		.loc 1 203 0
  91 005a 0423     		movs	r3, #4
  92 005c 1093     		str	r3, [sp, #64]
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
  93              		.loc 1 204 0
  94 005e A822     		movs	r2, #168
  95 0060 1192     		str	r2, [sp, #68]
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  96              		.loc 1 205 0
  97 0062 1295     		str	r5, [sp, #72]
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
  98              		.loc 1 206 0
  99 0064 1393     		str	r3, [sp, #76]
 207:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 100              		.loc 1 207 0
 101 0066 08A8     		add	r0, sp, #32
 102 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 103              	.LVL1:
 208:Src/main.c    ****   {
 209:Src/main.c    ****     Error_Handler();
 210:Src/main.c    ****   }
 211:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 212:Src/main.c    ****   */
 213:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 104              		.loc 1 213 0
 105 006c 0F23     		movs	r3, #15
 106 006e 0393     		str	r3, [sp, #12]
 214:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 107              		.loc 1 214 0
 108 0070 0495     		str	r5, [sp, #16]
 215:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 109              		.loc 1 215 0
 110 0072 0594     		str	r4, [sp, #20]
 216:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 111              		.loc 1 216 0
 112 0074 4FF4A053 		mov	r3, #5120
 113 0078 0693     		str	r3, [sp, #24]
 217:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 114              		.loc 1 217 0
 115 007a 4FF48053 		mov	r3, #4096
 116 007e 0793     		str	r3, [sp, #28]
 218:Src/main.c    **** 
 219:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 117              		.loc 1 219 0
 118 0080 0521     		movs	r1, #5
 119 0082 03A8     		add	r0, sp, #12
 120 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 121              	.LVL2:
 220:Src/main.c    ****   {
 221:Src/main.c    ****     Error_Handler();
 222:Src/main.c    ****   }
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 7


 223:Src/main.c    ****   /** Enables the Clock Security System 
 224:Src/main.c    ****   */
 225:Src/main.c    ****   HAL_RCC_EnableCSS();
 122              		.loc 1 225 0
 123 0088 FFF7FEFF 		bl	HAL_RCC_EnableCSS
 124              	.LVL3:
 226:Src/main.c    **** }
 125              		.loc 1 226 0
 126 008c 15B0     		add	sp, sp, #84
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 12
 129              		@ sp needed
 130 008e 30BD     		pop	{r4, r5, pc}
 131              	.L4:
 132              		.align	2
 133              	.L3:
 134 0090 00380240 		.word	1073887232
 135 0094 00700040 		.word	1073770496
 136              		.cfi_endproc
 137              	.LFE134:
 139              		.section	.text.main,"ax",%progbits
 140              		.align	1
 141              		.global	main
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	main:
 148              	.LFB133:
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
 149              		.loc 1 76 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 32
 156              		.cfi_offset 4, -32
 157              		.cfi_offset 5, -28
 158              		.cfi_offset 6, -24
 159              		.cfi_offset 7, -20
 160              		.cfi_offset 8, -16
 161              		.cfi_offset 9, -12
 162              		.cfi_offset 10, -8
 163              		.cfi_offset 14, -4
 164 0004 8AB0     		sub	sp, sp, #40
 165              	.LCFI4:
 166              		.cfi_def_cfa_offset 72
  84:Src/main.c    **** 
 167              		.loc 1 84 0
 168 0006 FFF7FEFF 		bl	HAL_Init
 169              	.LVL4:
  91:Src/main.c    **** 
 170              		.loc 1 91 0
 171 000a FFF7FEFF 		bl	SystemClock_Config
 172              	.LVL5:
  98:Src/main.c    ****   MX_DMA_Init();
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 8


 173              		.loc 1 98 0
 174 000e FFF7FEFF 		bl	MX_GPIO_Init
 175              	.LVL6:
  99:Src/main.c    ****   MX_ADC1_Init();
 176              		.loc 1 99 0
 177 0012 FFF7FEFF 		bl	MX_DMA_Init
 178              	.LVL7:
 100:Src/main.c    ****   MX_USART1_UART_Init();
 179              		.loc 1 100 0
 180 0016 FFF7FEFF 		bl	MX_ADC1_Init
 181              	.LVL8:
 101:Src/main.c    ****   MX_TIM1_Init();
 182              		.loc 1 101 0
 183 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 184              	.LVL9:
 102:Src/main.c    ****   /* USER CODE BEGIN 2 */
 185              		.loc 1 102 0
 186 001e FFF7FEFF 		bl	MX_TIM1_Init
 187              	.LVL10:
 104:Src/main.c    ****   PID_Init();
 188              		.loc 1 104 0
 189 0022 3A48     		ldr	r0, .L12
 190 0024 FFF7FEFF 		bl	HAL_TIM_PWM_MspInit
 191              	.LVL11:
 105:Src/main.c    ****   threeHallPara_Init();
 192              		.loc 1 105 0
 193 0028 FFF7FEFF 		bl	PID_Init
 194              	.LVL12:
 106:Src/main.c    ****   uint32_t ad1, ad2, ad3, ad4, ad5;
 195              		.loc 1 106 0
 196 002c FFF7FEFF 		bl	threeHallPara_Init
 197              	.LVL13:
 108:Src/main.c    ****   {
 198              		.loc 1 108 0
 199 0030 0522     		movs	r2, #5
 200 0032 3749     		ldr	r1, .L12+4
 201 0034 3748     		ldr	r0, .L12+8
 202 0036 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 203              	.LVL14:
 204 003a 18B1     		cbz	r0, .L6
 205              	.L7:
 112:Src/main.c    ****     }
 206              		.loc 1 112 0 discriminator 1
 207 003c 3648     		ldr	r0, .L12+12
 208 003e FFF7FEFF 		bl	myPrint
 209              	.LVL15:
 210 0042 FBE7     		b	.L7
 211              	.L6:
 116:Src/main.c    ****   {
 212              		.loc 1 116 0
 213 0044 3148     		ldr	r0, .L12
 214 0046 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 215              	.LVL16:
 216 004a 18B1     		cbz	r0, .L8
 217              	.L9:
 120:Src/main.c    ****     }
 218              		.loc 1 120 0 discriminator 1
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 9


 219 004c 3348     		ldr	r0, .L12+16
 220 004e FFF7FEFF 		bl	myPrint
 221              	.LVL17:
 222 0052 FBE7     		b	.L9
 223              	.L8:
 123:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 224              		.loc 1 123 0
 225 0054 2D4C     		ldr	r4, .L12
 226 0056 0021     		movs	r1, #0
 227 0058 2046     		mov	r0, r4
 228 005a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 229              	.LVL18:
 124:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 230              		.loc 1 124 0
 231 005e 0421     		movs	r1, #4
 232 0060 2046     		mov	r0, r4
 233 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 234              	.LVL19:
 125:Src/main.c    ****   __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, 499);
 235              		.loc 1 125 0
 236 0066 0821     		movs	r1, #8
 237 0068 2046     		mov	r0, r4
 238 006a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 239              	.LVL20:
 126:Src/main.c    ****   __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_2, 499);
 240              		.loc 1 126 0
 241 006e 2368     		ldr	r3, [r4]
 242 0070 40F2F312 		movw	r2, #499
 243 0074 5A63     		str	r2, [r3, #52]
 127:Src/main.c    ****   __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_3, 499);
 244              		.loc 1 127 0
 245 0076 9A63     		str	r2, [r3, #56]
 128:Src/main.c    ****   stateContr.controlMode = LOOP;
 246              		.loc 1 128 0
 247 0078 DA63     		str	r2, [r3, #60]
 129:Src/main.c    ****   switch (stateContr.controlMode)
 248              		.loc 1 129 0
 249 007a 294B     		ldr	r3, .L12+20
 250 007c 0122     		movs	r2, #1
 251 007e 1A70     		strb	r2, [r3]
 134:Src/main.c    ****     stateContr.aimDuty = 1000 * stateContr.aimSpeed / 100;
 252              		.loc 1 134 0
 253 0080 6422     		movs	r2, #100
 254 0082 1A82     		strh	r2, [r3, #16]	@ movhi
 135:Src/main.c    ****   }
 255              		.loc 1 135 0
 256 0084 4FF47A72 		mov	r2, #1000
 257 0088 5A61     		str	r2, [r3, #20]
 258              	.L10:
 159:Src/main.c    ****     ad1 = ADC_DualConvertValTab[0];
 259              		.loc 1 159 0 discriminator 1
 260 008a 1420     		movs	r0, #20
 261 008c FFF7FEFF 		bl	HAL_Delay
 262              	.LVL21:
 160:Src/main.c    ****     ad2 = ADC_DualConvertValTab[1];
 263              		.loc 1 160 0 discriminator 1
 264 0090 1F48     		ldr	r0, .L12+4
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 10


 265 0092 0188     		ldrh	r1, [r0]
 266              	.LVL22:
 161:Src/main.c    ****     ad3 = ADC_DualConvertValTab[2];
 267              		.loc 1 161 0 discriminator 1
 268 0094 4288     		ldrh	r2, [r0, #2]
 269              	.LVL23:
 162:Src/main.c    ****     ad4 = ADC_DualConvertValTab[3];
 270              		.loc 1 162 0 discriminator 1
 271 0096 8388     		ldrh	r3, [r0, #4]
 272              	.LVL24:
 163:Src/main.c    ****     ad5 = ADC_DualConvertValTab[4];
 273              		.loc 1 163 0 discriminator 1
 274 0098 C588     		ldrh	r5, [r0, #6]
 275              	.LVL25:
 164:Src/main.c    ****     //__HAL_TIM_SetCompare(&htim1,TIM_CHANNEL_1,ad1);
 276              		.loc 1 164 0 discriminator 1
 277 009a 0489     		ldrh	r4, [r0, #8]
 278              	.LVL26:
 171:Src/main.c    ****             TIM1->CCR1, TIM1->CCR2, TIM1->CCR3,\
 279              		.loc 1 171 0 discriminator 1
 280 009c 40F6E440 		movw	r0, #3300
 281 00a0 00FB01F1 		mul	r1, r0, r1
 282              	.LVL27:
 283 00a4 00FB02F2 		mul	r2, r0, r2
 284              	.LVL28:
 285 00a8 00FB03F3 		mul	r3, r0, r3
 286              	.LVL29:
 287 00ac 00FB05F5 		mul	r5, r0, r5
 288              	.LVL30:
 289 00b0 00FB04F0 		mul	r0, r0, r4
 167:Src/main.c    ****             TIM CCR VALUE IS %d %d %d \
 290              		.loc 1 167 0 discriminator 1
 291 00b4 1B4C     		ldr	r4, .L12+24
 292              	.LVL31:
 293 00b6 666B     		ldr	r6, [r4, #52]
 294 00b8 A76B     		ldr	r7, [r4, #56]
 295 00ba D4F83CC0 		ldr	ip, [r4, #60]
 173:Src/main.c    ****             hallTree.hallUVW[0], hallTree.hallUVW[1], hallTree.hallUVW[2], stateContr.controlMode);
 296              		.loc 1 173 0 discriminator 1
 297 00be 1A4C     		ldr	r4, .L12+28
 298 00c0 94F803E0 		ldrb	lr, [r4, #3]	@ zero_extendqisi2
 174:Src/main.c    ****     keyScan();
 299              		.loc 1 174 0 discriminator 1
 300 00c4 94F80080 		ldrb	r8, [r4]	@ zero_extendqisi2
 301 00c8 94F80190 		ldrb	r9, [r4, #1]	@ zero_extendqisi2
 302 00cc A478     		ldrb	r4, [r4, #2]	@ zero_extendqisi2
 303 00ce DFF850A0 		ldr	r10, .L12+20
 304 00d2 9AF800A0 		ldrb	r10, [r10]	@ zero_extendqisi2
 167:Src/main.c    ****             TIM CCR VALUE IS %d %d %d \
 305              		.loc 1 167 0 discriminator 1
 306 00d6 CDF824A0 		str	r10, [sp, #36]
 307 00da 0894     		str	r4, [sp, #32]
 308 00dc CDF81C90 		str	r9, [sp, #28]
 309 00e0 CDF81880 		str	r8, [sp, #24]
 310 00e4 CDF814E0 		str	lr, [sp, #20]
 311 00e8 CDF810C0 		str	ip, [sp, #16]
 312 00ec 0397     		str	r7, [sp, #12]
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 11


 313 00ee 0296     		str	r6, [sp, #8]
 314 00f0 000B     		lsrs	r0, r0, #12
 315 00f2 0190     		str	r0, [sp, #4]
 316 00f4 2D0B     		lsrs	r5, r5, #12
 317 00f6 0095     		str	r5, [sp]
 318 00f8 1B0B     		lsrs	r3, r3, #12
 319 00fa 120B     		lsrs	r2, r2, #12
 320 00fc 090B     		lsrs	r1, r1, #12
 321 00fe 0B48     		ldr	r0, .L12+32
 322 0100 FFF7FEFF 		bl	myPrint
 323              	.LVL32:
 175:Src/main.c    ****   #endif
 324              		.loc 1 175 0 discriminator 1
 325 0104 FFF7FEFF 		bl	keyScan
 326              	.LVL33:
 327 0108 BFE7     		b	.L10
 328              	.L13:
 329 010a 00BF     		.align	2
 330              	.L12:
 331 010c 00000000 		.word	htim1
 332 0110 00000000 		.word	ADC_DualConvertValTab
 333 0114 00000000 		.word	hadc1
 334 0118 00000000 		.word	.LC0
 335 011c 20000000 		.word	.LC1
 336 0120 00000000 		.word	stateContr
 337 0124 00000140 		.word	1073807360
 338 0128 00000000 		.word	hallTree
 339 012c 48000000 		.word	.LC2
 340              		.cfi_endproc
 341              	.LFE133:
 343              		.section	.text.Error_Handler,"ax",%progbits
 344              		.align	1
 345              		.global	Error_Handler
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	Error_Handler:
 352              	.LFB135:
 227:Src/main.c    **** 
 228:Src/main.c    **** /* USER CODE BEGIN 4 */
 229:Src/main.c    **** 
 230:Src/main.c    **** /* USER CODE END 4 */
 231:Src/main.c    **** 
 232:Src/main.c    **** /**
 233:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 234:Src/main.c    ****   * @retval None
 235:Src/main.c    ****   */
 236:Src/main.c    **** void Error_Handler(void)
 237:Src/main.c    **** {
 353              		.loc 1 237 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 238:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 239:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 12


 240:Src/main.c    **** 
 241:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 242:Src/main.c    **** }
 358              		.loc 1 242 0
 359 0000 7047     		bx	lr
 360              		.cfi_endproc
 361              	.LFE135:
 363              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 364              		.align	2
 365              	.LC0:
 366 0000 6572726F 		.ascii	"error code:hall_dma_error!\015\012\000"
 366      7220636F 
 366      64653A68 
 366      616C6C5F 
 366      646D615F 
 367 001d 000000   		.space	3
 368              	.LC1:
 369 0020 6572726F 		.ascii	"error code:hall_base_start_it_error!\015\012 \000"
 369      7220636F 
 369      64653A68 
 369      616C6C5F 
 369      62617365 
 370              	.LC2:
 371 0048 41444320 		.ascii	"ADC VALUE IS: %d mV| %d mV| %d mV| %d mV| %d mV;   "
 371      56414C55 
 371      45204953 
 371      3A202564 
 371      206D567C 
 372 007b 20202020 		.ascii	"         TIM CCR VALUE IS %d %d %d             hall"
 372      20202020 
 372      2054494D 
 372      20434352 
 372      2056414C 
 373 00ae 53746174 		.ascii	"State is: %d             Hall status is %d %d %d ct"
 373      65206973 
 373      3A202564 
 373      20202020 
 373      20202020 
 374 00e1 726C206D 		.ascii	"rl mode :%d\015\012\000"
 374      6F646520 
 374      3A25640D 
 374      0A00
 375              		.text
 376              	.Letext0:
 377              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 378              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 379              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 380              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 381              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 382              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 383              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 384              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 385              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 386              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 387              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 388              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 389              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 13


 390              		.file 15 "Inc/adc.h"
 391              		.file 16 "Inc/tim.h"
 392              		.file 17 "Inc/usart.h"
 393              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 394              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 395              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 396              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 397              		.file 22 "Inc/bldc.h"
 398              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 399              		.file 24 "Inc/gpio.h"
 400              		.file 25 "Inc/dma.h"
 401              		.file 26 "Inc/myprint.h"
 402              		.file 27 "Inc/keyscan.h"
 403              		.file 28 "<built-in>"
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:18     .text.SystemClock_Config:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:25     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:134    .text.SystemClock_Config:00000090 $d
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:140    .text.main:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:147    .text.main:00000000 main
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:331    .text.main:0000010c $d
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:344    .text.Error_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:351    .text.Error_Handler:00000000 Error_Handler
C:\Users\Cairne\AppData\Local\Temp\cc9Afuyw.s:364    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_EnableCSS
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_USART1_UART_Init
MX_TIM1_Init
HAL_TIM_PWM_MspInit
PID_Init
threeHallPara_Init
HAL_ADC_Start_DMA
myPrint
HAL_TIM_Base_Start_IT
HAL_TIM_PWM_Start
HAL_Delay
keyScan
htim1
ADC_DualConvertValTab
hadc1
stateContr
hallTree
