ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** #include "bldc.h"
  27:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f4xx_it.c **** 
  29:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  31:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 2


  32:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f4xx_it.c **** 
  34:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f4xx_it.c ****  
  37:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f4xx_it.c **** extern HALL hallTree;
  47:Src/stm32f4xx_it.c **** extern STATE stateContr;
  48:Src/stm32f4xx_it.c **** extern PIDREG_T piSpd;
  49:Src/stm32f4xx_it.c **** extern PIDREG_T piICurr;
  50:Src/stm32f4xx_it.c **** extern ADCSamp ADCSampPare;
  51:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  54:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  59:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  60:Src/stm32f4xx_it.c **** 
  61:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  64:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  65:Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  66:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  67:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  70:Src/stm32f4xx_it.c **** 
  71:Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  73:Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Src/stm32f4xx_it.c **** /**
  75:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  76:Src/stm32f4xx_it.c ****   */
  77:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  78:Src/stm32f4xx_it.c **** {
  28              		.loc 1 78 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  79:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 3


  80:Src/stm32f4xx_it.c **** 
  81:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  82:Src/stm32f4xx_it.c ****   HAL_RCC_NMI_IRQHandler();
  37              		.loc 1 82 0
  38 0002 FFF7FEFF 		bl	HAL_RCC_NMI_IRQHandler
  39              	.LVL0:
  83:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  86:Src/stm32f4xx_it.c **** }
  40              		.loc 1 86 0
  41 0006 08BD     		pop	{r3, pc}
  42              		.cfi_endproc
  43              	.LFE130:
  45              		.section	.text.HardFault_Handler,"ax",%progbits
  46              		.align	1
  47              		.global	HardFault_Handler
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	HardFault_Handler:
  54              	.LFB131:
  87:Src/stm32f4xx_it.c **** 
  88:Src/stm32f4xx_it.c **** /**
  89:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  90:Src/stm32f4xx_it.c ****   */
  91:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  92:Src/stm32f4xx_it.c **** {
  55              		.loc 1 92 0
  56              		.cfi_startproc
  57              		@ Volatile: function does not return.
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.L4:
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE131:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	MemManage_Handler:
  75              	.LFB132:
  93:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  94:Src/stm32f4xx_it.c **** 
  95:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  96:Src/stm32f4xx_it.c ****   while (1)
  97:Src/stm32f4xx_it.c ****   {
  98:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  99:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 100:Src/stm32f4xx_it.c ****   }
 101:Src/stm32f4xx_it.c **** }
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 4


 102:Src/stm32f4xx_it.c **** 
 103:Src/stm32f4xx_it.c **** /**
 104:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 105:Src/stm32f4xx_it.c ****   */
 106:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 107:Src/stm32f4xx_it.c **** {
  76              		.loc 1 107 0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE132:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB133:
 108:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 109:Src/stm32f4xx_it.c **** 
 110:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 111:Src/stm32f4xx_it.c ****   while (1)
 112:Src/stm32f4xx_it.c ****   {
 113:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 114:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 115:Src/stm32f4xx_it.c ****   }
 116:Src/stm32f4xx_it.c **** }
 117:Src/stm32f4xx_it.c **** 
 118:Src/stm32f4xx_it.c **** /**
 119:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 120:Src/stm32f4xx_it.c ****   */
 121:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 122:Src/stm32f4xx_it.c **** {
  97              		.loc 1 122 0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L8:
 104 0000 FEE7     		b	.L8
 105              		.cfi_endproc
 106              	.LFE133:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 5


 116              	UsageFault_Handler:
 117              	.LFB134:
 123:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 124:Src/stm32f4xx_it.c **** 
 125:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 126:Src/stm32f4xx_it.c ****   while (1)
 127:Src/stm32f4xx_it.c ****   {
 128:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 129:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 130:Src/stm32f4xx_it.c ****   }
 131:Src/stm32f4xx_it.c **** }
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c **** /**
 134:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 135:Src/stm32f4xx_it.c ****   */
 136:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 137:Src/stm32f4xx_it.c **** {
 118              		.loc 1 137 0
 119              		.cfi_startproc
 120              		@ Volatile: function does not return.
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.L10:
 125 0000 FEE7     		b	.L10
 126              		.cfi_endproc
 127              	.LFE134:
 129              		.section	.text.SVC_Handler,"ax",%progbits
 130              		.align	1
 131              		.global	SVC_Handler
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	SVC_Handler:
 138              	.LFB135:
 138:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 139:Src/stm32f4xx_it.c **** 
 140:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 141:Src/stm32f4xx_it.c ****   while (1)
 142:Src/stm32f4xx_it.c ****   {
 143:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 144:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 145:Src/stm32f4xx_it.c ****   }
 146:Src/stm32f4xx_it.c **** }
 147:Src/stm32f4xx_it.c **** 
 148:Src/stm32f4xx_it.c **** /**
 149:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 150:Src/stm32f4xx_it.c ****   */
 151:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 152:Src/stm32f4xx_it.c **** {
 139              		.loc 1 152 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 153:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 6


 154:Src/stm32f4xx_it.c **** 
 155:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 156:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 157:Src/stm32f4xx_it.c **** 
 158:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 159:Src/stm32f4xx_it.c **** }
 144              		.loc 1 159 0
 145 0000 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE135:
 149              		.section	.text.DebugMon_Handler,"ax",%progbits
 150              		.align	1
 151              		.global	DebugMon_Handler
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv4-sp-d16
 157              	DebugMon_Handler:
 158              	.LFB136:
 160:Src/stm32f4xx_it.c **** 
 161:Src/stm32f4xx_it.c **** /**
 162:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 163:Src/stm32f4xx_it.c ****   */
 164:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 165:Src/stm32f4xx_it.c **** {
 159              		.loc 1 165 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 166:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 167:Src/stm32f4xx_it.c **** 
 168:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 169:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 170:Src/stm32f4xx_it.c **** 
 171:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 172:Src/stm32f4xx_it.c **** }
 164              		.loc 1 172 0
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE136:
 169              		.section	.text.PendSV_Handler,"ax",%progbits
 170              		.align	1
 171              		.global	PendSV_Handler
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	PendSV_Handler:
 178              	.LFB137:
 173:Src/stm32f4xx_it.c **** 
 174:Src/stm32f4xx_it.c **** /**
 175:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 176:Src/stm32f4xx_it.c ****   */
 177:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 178:Src/stm32f4xx_it.c **** {
 179              		.loc 1 178 0
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 7


 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 179:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 180:Src/stm32f4xx_it.c **** 
 181:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 182:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 183:Src/stm32f4xx_it.c **** 
 184:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 185:Src/stm32f4xx_it.c **** }
 184              		.loc 1 185 0
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE137:
 189              		.section	.text.SysTick_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	SysTick_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	SysTick_Handler:
 198              	.LFB138:
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c **** /**
 188:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 189:Src/stm32f4xx_it.c ****   */
 190:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 191:Src/stm32f4xx_it.c **** {
 199              		.loc 1 191 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI1:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 192:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 195:Src/stm32f4xx_it.c ****   HAL_IncTick();
 208              		.loc 1 195 0
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL1:
 196:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 197:Src/stm32f4xx_it.c **** 
 198:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 199:Src/stm32f4xx_it.c **** }
 211              		.loc 1 199 0
 212 0006 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE138:
 216              		.section	.text.ADC_IRQHandler,"ax",%progbits
 217              		.align	1
 218              		.global	ADC_IRQHandler
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 8


 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	ADC_IRQHandler:
 225              	.LFB139:
 200:Src/stm32f4xx_it.c **** 
 201:Src/stm32f4xx_it.c **** /******************************************************************************/
 202:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 203:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 204:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 205:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 206:Src/stm32f4xx_it.c **** /******************************************************************************/
 207:Src/stm32f4xx_it.c **** 
 208:Src/stm32f4xx_it.c **** /**
 209:Src/stm32f4xx_it.c ****   * @brief This function handles ADC1, ADC2 and ADC3 global interrupts.
 210:Src/stm32f4xx_it.c ****   */
 211:Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 212:Src/stm32f4xx_it.c **** {
 226              		.loc 1 212 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI2:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 213:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 214:Src/stm32f4xx_it.c **** 
 215:Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 216:Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 235              		.loc 1 216 0
 236 0002 0248     		ldr	r0, .L18
 237 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 238              	.LVL2:
 217:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 218:Src/stm32f4xx_it.c **** 
 219:Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 220:Src/stm32f4xx_it.c **** }
 239              		.loc 1 220 0
 240 0008 08BD     		pop	{r3, pc}
 241              	.L19:
 242 000a 00BF     		.align	2
 243              	.L18:
 244 000c 00000000 		.word	hadc1
 245              		.cfi_endproc
 246              	.LFE139:
 248              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 249              		.align	1
 250              		.global	TIM1_UP_TIM10_IRQHandler
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu fpv4-sp-d16
 256              	TIM1_UP_TIM10_IRQHandler:
 257              	.LFB140:
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 9


 221:Src/stm32f4xx_it.c **** 
 222:Src/stm32f4xx_it.c **** /**
 223:Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 224:Src/stm32f4xx_it.c ****   */
 225:Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 226:Src/stm32f4xx_it.c **** {
 258              		.loc 1 226 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 08B5     		push	{r3, lr}
 263              	.LCFI3:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 227:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 228:Src/stm32f4xx_it.c **** 
 229:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 230:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 267              		.loc 1 230 0
 268 0002 0248     		ldr	r0, .L22
 269 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 270              	.LVL3:
 231:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 232:Src/stm32f4xx_it.c **** 
 233:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 234:Src/stm32f4xx_it.c **** }
 271              		.loc 1 234 0
 272 0008 08BD     		pop	{r3, pc}
 273              	.L23:
 274 000a 00BF     		.align	2
 275              	.L22:
 276 000c 00000000 		.word	htim1
 277              		.cfi_endproc
 278              	.LFE140:
 280              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 281              		.align	1
 282              		.global	DMA2_Stream0_IRQHandler
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	DMA2_Stream0_IRQHandler:
 289              	.LFB141:
 235:Src/stm32f4xx_it.c **** 
 236:Src/stm32f4xx_it.c **** /**
 237:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 238:Src/stm32f4xx_it.c ****   */
 239:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 240:Src/stm32f4xx_it.c **** {
 290              		.loc 1 240 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 08B5     		push	{r3, lr}
 295              	.LCFI4:
 296              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 10


 297              		.cfi_offset 3, -8
 298              		.cfi_offset 14, -4
 241:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 242:Src/stm32f4xx_it.c **** 
 243:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 244:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 299              		.loc 1 244 0
 300 0002 0248     		ldr	r0, .L26
 301 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 302              	.LVL4:
 245:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 246:Src/stm32f4xx_it.c **** 
 247:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 248:Src/stm32f4xx_it.c **** }
 303              		.loc 1 248 0
 304 0008 08BD     		pop	{r3, pc}
 305              	.L27:
 306 000a 00BF     		.align	2
 307              	.L26:
 308 000c 00000000 		.word	hdma_adc1
 309              		.cfi_endproc
 310              	.LFE141:
 312              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 313              		.align	1
 314              		.global	HAL_TIM_PeriodElapsedCallback
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	HAL_TIM_PeriodElapsedCallback:
 321              	.LFB142:
 249:Src/stm32f4xx_it.c **** 
 250:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 1 */
 251:Src/stm32f4xx_it.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 252:Src/stm32f4xx_it.c **** {
 322              		.loc 1 252 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              	.LVL5:
 327 0000 08B5     		push	{r3, lr}
 328              	.LCFI5:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 253:Src/stm32f4xx_it.c ****   if(htim == &htim1)
 332              		.loc 1 253 0
 333 0002 BC4B     		ldr	r3, .L80
 334 0004 8342     		cmp	r3, r0
 335 0006 00D0     		beq	.L75
 336              	.LVL6:
 337              	.L28:
 254:Src/stm32f4xx_it.c ****   {
 255:Src/stm32f4xx_it.c ****     offsetCurrentRead();
 256:Src/stm32f4xx_it.c ****     HALL_ADCSample();
 257:Src/stm32f4xx_it.c ****     hallSwitch();
 258:Src/stm32f4xx_it.c ****     if(stateContr.controlMode == 1) //open loop
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 11


 259:Src/stm32f4xx_it.c ****     {
 260:Src/stm32f4xx_it.c ****       stateContr.duty = stateContr.aimDuty;
 261:Src/stm32f4xx_it.c ****     }
 262:Src/stm32f4xx_it.c ****     else if(stateContr.controlMode == 2)
 263:Src/stm32f4xx_it.c ****     {
 264:Src/stm32f4xx_it.c ****       stateContr.speedCount++;
 265:Src/stm32f4xx_it.c ****       if(stateContr.speedCount > 2)
 266:Src/stm32f4xx_it.c ****       {
 267:Src/stm32f4xx_it.c ****         piSpd.fdb = hallTree.speedRPMF;
 268:Src/stm32f4xx_it.c ****         PID_CALC(piSpd);
 269:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 270:Src/stm32f4xx_it.c ****         piSpd.outF = piSpd.out;
 271:Src/stm32f4xx_it.c ****         stateContr.speedCount = 0;
 272:Src/stm32f4xx_it.c ****         stateContr.duty = piSpd.outF;
 273:Src/stm32f4xx_it.c ****       }
 274:Src/stm32f4xx_it.c ****     }
 275:Src/stm32f4xx_it.c ****     else if(stateContr.controlMode == 3)
 276:Src/stm32f4xx_it.c ****     {
 277:Src/stm32f4xx_it.c ****       stateContr.speedCount++;
 278:Src/stm32f4xx_it.c ****       stateContr.currentCount++;
 279:Src/stm32f4xx_it.c ****       if(stateContr.speedCount > 2)
 280:Src/stm32f4xx_it.c ****       {
 281:Src/stm32f4xx_it.c ****         piSpd.fdb = hallTree.speedRPMF;
 282:Src/stm32f4xx_it.c ****         PID_CALC(piSpd);
 283:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 284:Src/stm32f4xx_it.c ****         stateContr.speedCount = 0;
 285:Src/stm32f4xx_it.c ****       }   
 286:Src/stm32f4xx_it.c ****       if(stateContr.currentCount > 1)
 287:Src/stm32f4xx_it.c ****       {
 288:Src/stm32f4xx_it.c ****         piICurr.ref = TORQUE;
 289:Src/stm32f4xx_it.c ****         piICurr.fdb = ADCSampPare.busCurr;
 290:Src/stm32f4xx_it.c ****         PID_CALC(piICurr);
 291:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 292:Src/stm32f4xx_it.c ****         stateContr.currentCount = 0;
 293:Src/stm32f4xx_it.c ****       }
 294:Src/stm32f4xx_it.c ****       if(piICurr.outF > piSpd.outF)
 295:Src/stm32f4xx_it.c ****       {
 296:Src/stm32f4xx_it.c ****         stateContr.duty = piSpd.outF;
 297:Src/stm32f4xx_it.c ****         piICurr.ui = piSpd.ui;
 298:Src/stm32f4xx_it.c ****       }
 299:Src/stm32f4xx_it.c ****       else
 300:Src/stm32f4xx_it.c ****       {
 301:Src/stm32f4xx_it.c ****         stateContr.duty = piICurr.outF;
 302:Src/stm32f4xx_it.c ****         piSpd.ui = piICurr.ui;
 303:Src/stm32f4xx_it.c ****       }
 304:Src/stm32f4xx_it.c ****     }
 305:Src/stm32f4xx_it.c ****   }
 306:Src/stm32f4xx_it.c **** }
 338              		.loc 1 306 0
 339 0008 08BD     		pop	{r3, pc}
 340              	.LVL7:
 341              	.L75:
 255:Src/stm32f4xx_it.c ****     HALL_ADCSample();
 342              		.loc 1 255 0
 343 000a FFF7FEFF 		bl	offsetCurrentRead
 344              	.LVL8:
 256:Src/stm32f4xx_it.c ****     hallSwitch();
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 12


 345              		.loc 1 256 0
 346 000e FFF7FEFF 		bl	HALL_ADCSample
 347              	.LVL9:
 257:Src/stm32f4xx_it.c ****     if(stateContr.controlMode == 1) //open loop
 348              		.loc 1 257 0
 349 0012 FFF7FEFF 		bl	hallSwitch
 350              	.LVL10:
 258:Src/stm32f4xx_it.c ****     {
 351              		.loc 1 258 0
 352 0016 B84B     		ldr	r3, .L80+4
 353 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 001a 012B     		cmp	r3, #1
 355 001c 00F0F380 		beq	.L76
 262:Src/stm32f4xx_it.c ****     {
 356              		.loc 1 262 0
 357 0020 022B     		cmp	r3, #2
 358 0022 00F0F480 		beq	.L77
 275:Src/stm32f4xx_it.c ****     {
 359              		.loc 1 275 0
 360 0026 032B     		cmp	r3, #3
 361 0028 EED1     		bne	.L28
 277:Src/stm32f4xx_it.c ****       stateContr.currentCount++;
 362              		.loc 1 277 0
 363 002a B349     		ldr	r1, .L80+4
 364 002c 8A89     		ldrh	r2, [r1, #12]
 365 002e 0132     		adds	r2, r2, #1
 366 0030 92B2     		uxth	r2, r2
 367 0032 8A81     		strh	r2, [r1, #12]	@ movhi
 278:Src/stm32f4xx_it.c ****       if(stateContr.speedCount > 2)
 368              		.loc 1 278 0
 369 0034 CB89     		ldrh	r3, [r1, #14]
 370 0036 0133     		adds	r3, r3, #1
 371 0038 9BB2     		uxth	r3, r3
 372 003a CB81     		strh	r3, [r1, #14]	@ movhi
 279:Src/stm32f4xx_it.c ****       {
 373              		.loc 1 279 0
 374 003c 022A     		cmp	r2, #2
 375 003e 64D9     		bls	.L40
 281:Src/stm32f4xx_it.c ****         PID_CALC(piSpd);
 376              		.loc 1 281 0
 377 0040 AE4A     		ldr	r2, .L80+8
 378 0042 528C     		ldrh	r2, [r2, #34]
 379 0044 07EE102A 		vmov	s14, r2	@ int
 380 0048 F8EE477A 		vcvt.f32.u32	s15, s14
 381 004c AC4A     		ldr	r2, .L80+12
 382 004e C2ED017A 		vstr.32	s15, [r2, #4]
 282:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 383              		.loc 1 282 0
 384 0052 92ED007A 		vldr.32	s14, [r2]
 385 0056 37EE677A 		vsub.f32	s14, s14, s15
 386 005a 82ED027A 		vstr.32	s14, [r2, #8]
 387 005e D2ED037A 		vldr.32	s15, [r2, #12]
 388 0062 27EE277A 		vmul.f32	s14, s14, s15
 389 0066 82ED047A 		vstr.32	s14, [r2, #16]
 390 006a D2ED056A 		vldr.32	s13, [r2, #20]
 391 006e D2ED0C7A 		vldr.32	s15, [r2, #48]
 392 0072 67EE277A 		vmul.f32	s15, s14, s15
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 13


 393 0076 76EEA76A 		vadd.f32	s13, s13, s15
 394 007a 92ED085A 		vldr.32	s10, [r2, #32]
 395 007e F4EEC56A 		vcmpe.f32	s13, s10
 396 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 397 0086 01DD     		ble	.L41
 398 0088 F0EE456A 		vmov.f32	s13, s10
 399              	.L41:
 282:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 400              		.loc 1 282 0 is_stmt 0 discriminator 4
 401 008c 9C4A     		ldr	r2, .L80+12
 402 008e D2ED095A 		vldr.32	s11, [r2, #36]
 403 0092 F4EEE65A 		vcmpe.f32	s11, s13
 404 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 405 009a 01DD     		ble	.L43
 282:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 406              		.loc 1 282 0
 407 009c F0EE656A 		vmov.f32	s13, s11
 408              	.L43:
 282:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 409              		.loc 1 282 0 discriminator 8
 410 00a0 974A     		ldr	r2, .L80+12
 411 00a2 C2ED056A 		vstr.32	s13, [r2, #20]
 412 00a6 D2ED0E7A 		vldr.32	s15, [r2, #56]
 413 00aa 92ED0F6A 		vldr.32	s12, [r2, #60]
 414 00ae 37EE466A 		vsub.f32	s12, s14, s12
 415 00b2 67EE867A 		vmul.f32	s15, s15, s12
 416 00b6 C2ED067A 		vstr.32	s15, [r2, #24]
 417 00ba 77EE266A 		vadd.f32	s13, s14, s13
 418 00be 77EEA67A 		vadd.f32	s15, s15, s13
 419 00c2 B4EEE75A 		vcmpe.f32	s10, s15
 420 00c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 421 00ca 01D5     		bpl	.L45
 282:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 422              		.loc 1 282 0
 423 00cc F0EE457A 		vmov.f32	s15, s10
 424              	.L45:
 282:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 425              		.loc 1 282 0 discriminator 12
 426 00d0 F4EEE75A 		vcmpe.f32	s11, s15
 427 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 428 00d8 01DD     		ble	.L47
 282:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 429              		.loc 1 282 0
 430 00da F0EE657A 		vmov.f32	s15, s11
 431              	.L47:
 282:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 432              		.loc 1 282 0 discriminator 16
 433 00de 884A     		ldr	r2, .L80+12
 434 00e0 C2ED0A7A 		vstr.32	s15, [r2, #40]
 435 00e4 82ED0F7A 		vstr.32	s14, [r2, #60]
 283:Src/stm32f4xx_it.c ****         stateContr.speedCount = 0;
 436              		.loc 1 283 0 is_stmt 1 discriminator 16
 437 00e8 92ED117A 		vldr.32	s14, [r2, #68]
 438 00ec DFED856A 		vldr.32	s13, .L80+16
 439 00f0 27EE267A 		vmul.f32	s14, s14, s13
 440 00f4 DFED846A 		vldr.32	s13, .L80+20
 441 00f8 67EEA67A 		vmul.f32	s15, s15, s13
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 14


 442 00fc 77EE277A 		vadd.f32	s15, s14, s15
 443 0100 C2ED117A 		vstr.32	s15, [r2, #68]
 284:Src/stm32f4xx_it.c ****       }   
 444              		.loc 1 284 0 discriminator 16
 445 0104 7C4A     		ldr	r2, .L80+4
 446 0106 0021     		movs	r1, #0
 447 0108 9181     		strh	r1, [r2, #12]	@ movhi
 448              	.L40:
 286:Src/stm32f4xx_it.c ****       {
 449              		.loc 1 286 0
 450 010a 012B     		cmp	r3, #1
 451 010c 65D9     		bls	.L49
 288:Src/stm32f4xx_it.c ****         piICurr.fdb = ADCSampPare.busCurr;
 452              		.loc 1 288 0
 453 010e 7F4B     		ldr	r3, .L80+24
 454 0110 DFED7F7A 		vldr.32	s15, .L80+28
 455 0114 C3ED007A 		vstr.32	s15, [r3]
 289:Src/stm32f4xx_it.c ****         PID_CALC(piICurr);
 456              		.loc 1 289 0
 457 0118 7E4A     		ldr	r2, .L80+32
 458 011a 92ED017A 		vldr.32	s14, [r2, #4]	@ int
 459 011e B8EEC77A 		vcvt.f32.s32	s14, s14
 460 0122 83ED017A 		vstr.32	s14, [r3, #4]
 290:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 461              		.loc 1 290 0
 462 0126 37EEC77A 		vsub.f32	s14, s15, s14
 463 012a 83ED027A 		vstr.32	s14, [r3, #8]
 464 012e D3ED037A 		vldr.32	s15, [r3, #12]
 465 0132 27EE277A 		vmul.f32	s14, s14, s15
 466 0136 83ED047A 		vstr.32	s14, [r3, #16]
 467 013a D3ED056A 		vldr.32	s13, [r3, #20]
 468 013e D3ED0C7A 		vldr.32	s15, [r3, #48]
 469 0142 67EE277A 		vmul.f32	s15, s14, s15
 470 0146 76EEA76A 		vadd.f32	s13, s13, s15
 471 014a D3ED085A 		vldr.32	s11, [r3, #32]
 472 014e F4EEE56A 		vcmpe.f32	s13, s11
 473 0152 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 474 0156 01DD     		ble	.L50
 475 0158 F0EE656A 		vmov.f32	s13, s11
 476              	.L50:
 290:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 477              		.loc 1 290 0 is_stmt 0 discriminator 4
 478 015c 6B4B     		ldr	r3, .L80+24
 479 015e 93ED096A 		vldr.32	s12, [r3, #36]
 480 0162 B4EEE66A 		vcmpe.f32	s12, s13
 481 0166 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 482 016a 01DD     		ble	.L52
 290:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 483              		.loc 1 290 0
 484 016c F0EE466A 		vmov.f32	s13, s12
 485              	.L52:
 290:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 486              		.loc 1 290 0 discriminator 8
 487 0170 664B     		ldr	r3, .L80+24
 488 0172 C3ED056A 		vstr.32	s13, [r3, #20]
 489 0176 D3ED0E7A 		vldr.32	s15, [r3, #56]
 490 017a 93ED0F5A 		vldr.32	s10, [r3, #60]
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 15


 491 017e 37EE455A 		vsub.f32	s10, s14, s10
 492 0182 67EE857A 		vmul.f32	s15, s15, s10
 493 0186 C3ED067A 		vstr.32	s15, [r3, #24]
 494 018a 77EE266A 		vadd.f32	s13, s14, s13
 495 018e 77EEA67A 		vadd.f32	s15, s15, s13
 496 0192 F4EEE75A 		vcmpe.f32	s11, s15
 497 0196 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 498 019a 01D5     		bpl	.L54
 290:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 499              		.loc 1 290 0
 500 019c F0EE657A 		vmov.f32	s15, s11
 501              	.L54:
 290:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 502              		.loc 1 290 0 discriminator 12
 503 01a0 B4EEE76A 		vcmpe.f32	s12, s15
 504 01a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 505 01a8 01DD     		ble	.L56
 290:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 506              		.loc 1 290 0
 507 01aa F0EE467A 		vmov.f32	s15, s12
 508              	.L56:
 290:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piICurr.out,piICurr.outF,0.08379f);
 509              		.loc 1 290 0 discriminator 16
 510 01ae 574B     		ldr	r3, .L80+24
 511 01b0 C3ED0A7A 		vstr.32	s15, [r3, #40]
 512 01b4 83ED0F7A 		vstr.32	s14, [r3, #60]
 291:Src/stm32f4xx_it.c ****         stateContr.currentCount = 0;
 513              		.loc 1 291 0 is_stmt 1 discriminator 16
 514 01b8 93ED117A 		vldr.32	s14, [r3, #68]
 515 01bc DFED516A 		vldr.32	s13, .L80+16
 516 01c0 27EE267A 		vmul.f32	s14, s14, s13
 517 01c4 DFED506A 		vldr.32	s13, .L80+20
 518 01c8 67EEA67A 		vmul.f32	s15, s15, s13
 519 01cc 77EE277A 		vadd.f32	s15, s14, s15
 520 01d0 C3ED117A 		vstr.32	s15, [r3, #68]
 292:Src/stm32f4xx_it.c ****       }
 521              		.loc 1 292 0 discriminator 16
 522 01d4 484B     		ldr	r3, .L80+4
 523 01d6 0022     		movs	r2, #0
 524 01d8 DA81     		strh	r2, [r3, #14]	@ movhi
 525              	.L49:
 294:Src/stm32f4xx_it.c ****       {
 526              		.loc 1 294 0
 527 01da 4C4B     		ldr	r3, .L80+24
 528 01dc D3ED117A 		vldr.32	s15, [r3, #68]
 529 01e0 474B     		ldr	r3, .L80+12
 530 01e2 93ED117A 		vldr.32	s14, [r3, #68]
 531 01e6 F4EEC77A 		vcmpe.f32	s15, s14
 532 01ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 533 01ee 76DC     		bgt	.L78
 301:Src/stm32f4xx_it.c ****         piSpd.ui = piICurr.ui;
 534              		.loc 1 301 0
 535 01f0 FCEEE77A 		vcvt.u32.f32	s15, s15
 536 01f4 404B     		ldr	r3, .L80+4
 537 01f6 17EE902A 		vmov	r2, s15	@ int
 538 01fa 5A81     		strh	r2, [r3, #10]	@ movhi
 302:Src/stm32f4xx_it.c ****       }
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 16


 539              		.loc 1 302 0
 540 01fc 434B     		ldr	r3, .L80+24
 541 01fe 5A69     		ldr	r2, [r3, #20]	@ float
 542 0200 3F4B     		ldr	r3, .L80+12
 543 0202 5A61     		str	r2, [r3, #20]	@ float
 544              		.loc 1 306 0
 545 0204 00E7     		b	.L28
 546              	.L76:
 260:Src/stm32f4xx_it.c ****     }
 547              		.loc 1 260 0
 548 0206 3C4B     		ldr	r3, .L80+4
 549 0208 5A69     		ldr	r2, [r3, #20]
 550 020a 5A81     		strh	r2, [r3, #10]	@ movhi
 551 020c FCE6     		b	.L28
 552              	.L77:
 264:Src/stm32f4xx_it.c ****       if(stateContr.speedCount > 2)
 553              		.loc 1 264 0
 554 020e 3A4A     		ldr	r2, .L80+4
 555 0210 9389     		ldrh	r3, [r2, #12]
 556 0212 0133     		adds	r3, r3, #1
 557 0214 9BB2     		uxth	r3, r3
 558 0216 9381     		strh	r3, [r2, #12]	@ movhi
 265:Src/stm32f4xx_it.c ****       {
 559              		.loc 1 265 0
 560 0218 022B     		cmp	r3, #2
 561 021a 7FF6F5AE 		bls	.L28
 267:Src/stm32f4xx_it.c ****         PID_CALC(piSpd);
 562              		.loc 1 267 0
 563 021e 374B     		ldr	r3, .L80+8
 564 0220 5B8C     		ldrh	r3, [r3, #34]
 565 0222 07EE103A 		vmov	s14, r3	@ int
 566 0226 F8EE477A 		vcvt.f32.u32	s15, s14
 567 022a 354B     		ldr	r3, .L80+12
 568 022c C3ED017A 		vstr.32	s15, [r3, #4]
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 569              		.loc 1 268 0
 570 0230 93ED007A 		vldr.32	s14, [r3]
 571 0234 37EE677A 		vsub.f32	s14, s14, s15
 572 0238 83ED027A 		vstr.32	s14, [r3, #8]
 573 023c D3ED037A 		vldr.32	s15, [r3, #12]
 574 0240 27EE277A 		vmul.f32	s14, s14, s15
 575 0244 83ED047A 		vstr.32	s14, [r3, #16]
 576 0248 D3ED056A 		vldr.32	s13, [r3, #20]
 577 024c D3ED0C7A 		vldr.32	s15, [r3, #48]
 578 0250 67EE277A 		vmul.f32	s15, s14, s15
 579 0254 76EEA76A 		vadd.f32	s13, s13, s15
 580 0258 D3ED085A 		vldr.32	s11, [r3, #32]
 581 025c F4EEE56A 		vcmpe.f32	s13, s11
 582 0260 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 583 0264 01DD     		ble	.L32
 584 0266 F0EE656A 		vmov.f32	s13, s11
 585              	.L32:
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 586              		.loc 1 268 0 is_stmt 0 discriminator 4
 587 026a 254B     		ldr	r3, .L80+12
 588 026c 93ED095A 		vldr.32	s10, [r3, #36]
 589 0270 B4EEE65A 		vcmpe.f32	s10, s13
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 17


 590 0274 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 591 0278 01DD     		ble	.L34
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 592              		.loc 1 268 0
 593 027a F0EE456A 		vmov.f32	s13, s10
 594              	.L34:
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 595              		.loc 1 268 0 discriminator 8
 596 027e 204B     		ldr	r3, .L80+12
 597 0280 C3ED056A 		vstr.32	s13, [r3, #20]
 598 0284 D3ED0E7A 		vldr.32	s15, [r3, #56]
 599 0288 93ED0F6A 		vldr.32	s12, [r3, #60]
 600 028c 37EE466A 		vsub.f32	s12, s14, s12
 601 0290 67EE867A 		vmul.f32	s15, s15, s12
 602 0294 C3ED067A 		vstr.32	s15, [r3, #24]
 603 0298 77EE266A 		vadd.f32	s13, s14, s13
 604 029c 77EEA67A 		vadd.f32	s15, s15, s13
 605 02a0 F4EEE75A 		vcmpe.f32	s11, s15
 606 02a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 607 02a8 01D5     		bpl	.L36
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 608              		.loc 1 268 0
 609 02aa F0EE657A 		vmov.f32	s15, s11
 610              	.L36:
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 611              		.loc 1 268 0 discriminator 12
 612 02ae B4EEE75A 		vcmpe.f32	s10, s15
 613 02b2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 614 02b6 0FDC     		bgt	.L79
 615              	.L38:
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 616              		.loc 1 268 0 discriminator 16
 617 02b8 114B     		ldr	r3, .L80+12
 618 02ba C3ED0A7A 		vstr.32	s15, [r3, #40]
 619 02be 83ED0F7A 		vstr.32	s14, [r3, #60]
 270:Src/stm32f4xx_it.c ****         stateContr.speedCount = 0;
 620              		.loc 1 270 0 is_stmt 1 discriminator 16
 621 02c2 C3ED117A 		vstr.32	s15, [r3, #68]
 271:Src/stm32f4xx_it.c ****         stateContr.duty = piSpd.outF;
 622              		.loc 1 271 0 discriminator 16
 623 02c6 0C4B     		ldr	r3, .L80+4
 624 02c8 0022     		movs	r2, #0
 625 02ca 9A81     		strh	r2, [r3, #12]	@ movhi
 272:Src/stm32f4xx_it.c ****       }
 626              		.loc 1 272 0 discriminator 16
 627 02cc FCEEE77A 		vcvt.u32.f32	s15, s15
 628 02d0 17EE902A 		vmov	r2, s15	@ int
 629 02d4 5A81     		strh	r2, [r3, #10]	@ movhi
 630 02d6 97E6     		b	.L28
 631              	.L79:
 268:Src/stm32f4xx_it.c ****         FIRSTORDER_LPF_CACL(piSpd.out,piSpd.outF,0.08379f);
 632              		.loc 1 268 0
 633 02d8 F0EE457A 		vmov.f32	s15, s10
 634 02dc ECE7     		b	.L38
 635              	.L78:
 296:Src/stm32f4xx_it.c ****         piICurr.ui = piSpd.ui;
 636              		.loc 1 296 0
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 18


 637 02de BCEEC77A 		vcvt.u32.f32	s14, s14
 638 02e2 054B     		ldr	r3, .L80+4
 639 02e4 17EE102A 		vmov	r2, s14	@ int
 640 02e8 5A81     		strh	r2, [r3, #10]	@ movhi
 297:Src/stm32f4xx_it.c ****       }
 641              		.loc 1 297 0
 642 02ea 054B     		ldr	r3, .L80+12
 643 02ec 5A69     		ldr	r2, [r3, #20]	@ float
 644 02ee 074B     		ldr	r3, .L80+24
 645 02f0 5A61     		str	r2, [r3, #20]	@ float
 646 02f2 89E6     		b	.L28
 647              	.L81:
 648              		.align	2
 649              	.L80:
 650 02f4 00000000 		.word	htim1
 651 02f8 00000000 		.word	stateContr
 652 02fc 00000000 		.word	hallTree
 653 0300 00000000 		.word	piSpd
 654 0304 BD8C6A3F 		.word	1063947453
 655 0308 179AAB3D 		.word	1034656279
 656 030c 00000000 		.word	piICurr
 657 0310 00C07F44 		.word	1149222912
 658 0314 00000000 		.word	ADCSampPare
 659              		.cfi_endproc
 660              	.LFE142:
 662              		.text
 663              	.Letext0:
 664              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 665              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 666              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 667              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 668              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 669              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 670              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 671              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 672              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 673              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 674              		.file 12 "Inc/tim.h"
 675              		.file 13 "Inc/adc.h"
 676              		.file 14 "Inc/bldc.h"
 677              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 678              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:18     .text.NMI_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:46     .text.HardFault_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:53     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:74     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:88     .text.BusFault_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:109    .text.UsageFault_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:116    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:130    .text.SVC_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:137    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:150    .text.DebugMon_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:157    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:170    .text.PendSV_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:177    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:190    .text.SysTick_Handler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:197    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:217    .text.ADC_IRQHandler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:224    .text.ADC_IRQHandler:00000000 ADC_IRQHandler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:244    .text.ADC_IRQHandler:0000000c $d
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:249    .text.TIM1_UP_TIM10_IRQHandler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:256    .text.TIM1_UP_TIM10_IRQHandler:00000000 TIM1_UP_TIM10_IRQHandler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:276    .text.TIM1_UP_TIM10_IRQHandler:0000000c $d
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:281    .text.DMA2_Stream0_IRQHandler:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:288    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:308    .text.DMA2_Stream0_IRQHandler:0000000c $d
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:313    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:320    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Cairne\AppData\Local\Temp\ccJVw3Rp.s:650    .text.HAL_TIM_PeriodElapsedCallback:000002f4 $d

UNDEFINED SYMBOLS
HAL_RCC_NMI_IRQHandler
HAL_IncTick
HAL_ADC_IRQHandler
hadc1
HAL_TIM_IRQHandler
htim1
HAL_DMA_IRQHandler
hdma_adc1
offsetCurrentRead
HALL_ADCSample
hallSwitch
stateContr
hallTree
piSpd
piICurr
ADCSampPare
