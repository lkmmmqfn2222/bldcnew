ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_ADC1_Init:
  26              	.LFB130:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   * @attention
   8:Src/adc.c     ****   *
   9:Src/adc.c     ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/adc.c     ****   * All rights reserved.</center></h2>
  11:Src/adc.c     ****   *
  12:Src/adc.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/adc.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/adc.c     ****   * License. You may obtain a copy of the License at:
  15:Src/adc.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** 
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  28:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  29:Src/adc.c     **** 
  30:Src/adc.c     **** /* ADC1 init function */
  31:Src/adc.c     **** void MX_ADC1_Init(void)
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 2


  32:Src/adc.c     **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  33:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  39              		.loc 1 33 0
  40 0004 0023     		movs	r3, #0
  41 0006 0093     		str	r3, [sp]
  42 0008 0193     		str	r3, [sp, #4]
  43 000a 0293     		str	r3, [sp, #8]
  44 000c 0393     		str	r3, [sp, #12]
  34:Src/adc.c     **** 
  35:Src/adc.c     ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  36:Src/adc.c     ****   */
  37:Src/adc.c     ****   hadc1.Instance = ADC1;
  45              		.loc 1 37 0
  46 000e 2E48     		ldr	r0, .L15
  47 0010 2E4A     		ldr	r2, .L15+4
  48 0012 0260     		str	r2, [r0]
  38:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  49              		.loc 1 38 0
  50 0014 4FF48032 		mov	r2, #65536
  51 0018 4260     		str	r2, [r0, #4]
  39:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  52              		.loc 1 39 0
  53 001a 8360     		str	r3, [r0, #8]
  40:Src/adc.c     ****   hadc1.Init.ScanConvMode = ENABLE;
  54              		.loc 1 40 0
  55 001c 0122     		movs	r2, #1
  56 001e 0261     		str	r2, [r0, #16]
  41:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  57              		.loc 1 41 0
  58 0020 0276     		strb	r2, [r0, #24]
  42:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  59              		.loc 1 42 0
  60 0022 80F82030 		strb	r3, [r0, #32]
  43:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  61              		.loc 1 43 0
  62 0026 C362     		str	r3, [r0, #44]
  44:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  63              		.loc 1 44 0
  64 0028 2949     		ldr	r1, .L15+8
  65 002a 8162     		str	r1, [r0, #40]
  45:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  66              		.loc 1 45 0
  67 002c C360     		str	r3, [r0, #12]
  46:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 5;
  68              		.loc 1 46 0
  69 002e 0523     		movs	r3, #5
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 3


  70 0030 C361     		str	r3, [r0, #28]
  47:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  71              		.loc 1 47 0
  72 0032 80F83020 		strb	r2, [r0, #48]
  48:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  73              		.loc 1 48 0
  74 0036 4261     		str	r2, [r0, #20]
  49:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  75              		.loc 1 49 0
  76 0038 FFF7FEFF 		bl	HAL_ADC_Init
  77              	.LVL0:
  78 003c 0028     		cmp	r0, #0
  79 003e 31D1     		bne	.L9
  80              	.L2:
  50:Src/adc.c     ****   {
  51:Src/adc.c     ****     Error_Handler();
  52:Src/adc.c     ****   }
  53:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  54:Src/adc.c     ****   */
  55:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_6;
  81              		.loc 1 55 0
  82 0040 0623     		movs	r3, #6
  83 0042 0093     		str	r3, [sp]
  56:Src/adc.c     ****   sConfig.Rank = 1;
  84              		.loc 1 56 0
  85 0044 0123     		movs	r3, #1
  86 0046 0193     		str	r3, [sp, #4]
  57:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
  87              		.loc 1 57 0
  88 0048 0023     		movs	r3, #0
  89 004a 0293     		str	r3, [sp, #8]
  58:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  90              		.loc 1 58 0
  91 004c 6946     		mov	r1, sp
  92 004e 1E48     		ldr	r0, .L15
  93 0050 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  94              	.LVL1:
  95 0054 48BB     		cbnz	r0, .L10
  96              	.L3:
  59:Src/adc.c     ****   {
  60:Src/adc.c     ****     Error_Handler();
  61:Src/adc.c     ****   }
  62:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  63:Src/adc.c     ****   */
  64:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_7;
  97              		.loc 1 64 0
  98 0056 0723     		movs	r3, #7
  99 0058 0093     		str	r3, [sp]
  65:Src/adc.c     ****   sConfig.Rank = 2;
 100              		.loc 1 65 0
 101 005a 0223     		movs	r3, #2
 102 005c 0193     		str	r3, [sp, #4]
  66:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 103              		.loc 1 66 0
 104 005e 6946     		mov	r1, sp
 105 0060 1948     		ldr	r0, .L15
 106 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 4


 107              	.LVL2:
 108 0066 18BB     		cbnz	r0, .L11
 109              	.L4:
  67:Src/adc.c     ****   {
  68:Src/adc.c     ****     Error_Handler();
  69:Src/adc.c     ****   }
  70:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  71:Src/adc.c     ****   */
  72:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_8;
 110              		.loc 1 72 0
 111 0068 0823     		movs	r3, #8
 112 006a 0093     		str	r3, [sp]
  73:Src/adc.c     ****   sConfig.Rank = 3;
 113              		.loc 1 73 0
 114 006c 0323     		movs	r3, #3
 115 006e 0193     		str	r3, [sp, #4]
  74:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 116              		.loc 1 74 0
 117 0070 6946     		mov	r1, sp
 118 0072 1548     		ldr	r0, .L15
 119 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 120              	.LVL3:
 121 0078 E8B9     		cbnz	r0, .L12
 122              	.L5:
  75:Src/adc.c     ****   {
  76:Src/adc.c     ****     Error_Handler();
  77:Src/adc.c     ****   }
  78:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  79:Src/adc.c     ****   */
  80:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_11;
 123              		.loc 1 80 0
 124 007a 0B23     		movs	r3, #11
 125 007c 0093     		str	r3, [sp]
  81:Src/adc.c     ****   sConfig.Rank = 4;
 126              		.loc 1 81 0
 127 007e 0423     		movs	r3, #4
 128 0080 0193     		str	r3, [sp, #4]
  82:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 129              		.loc 1 82 0
 130 0082 6946     		mov	r1, sp
 131 0084 1048     		ldr	r0, .L15
 132 0086 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 133              	.LVL4:
 134 008a B8B9     		cbnz	r0, .L13
 135              	.L6:
  83:Src/adc.c     ****   {
  84:Src/adc.c     ****     Error_Handler();
  85:Src/adc.c     ****   }
  86:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  87:Src/adc.c     ****   */
  88:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_14;
 136              		.loc 1 88 0
 137 008c 0E23     		movs	r3, #14
 138 008e 0093     		str	r3, [sp]
  89:Src/adc.c     ****   sConfig.Rank = 5;
 139              		.loc 1 89 0
 140 0090 0523     		movs	r3, #5
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 5


 141 0092 0193     		str	r3, [sp, #4]
  90:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 142              		.loc 1 90 0
 143 0094 6946     		mov	r1, sp
 144 0096 0C48     		ldr	r0, .L15
 145 0098 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 146              	.LVL5:
 147 009c 88B9     		cbnz	r0, .L14
 148              	.L1:
  91:Src/adc.c     ****   {
  92:Src/adc.c     ****     Error_Handler();
  93:Src/adc.c     ****   }
  94:Src/adc.c     **** 
  95:Src/adc.c     **** }
 149              		.loc 1 95 0
 150 009e 05B0     		add	sp, sp, #20
 151              	.LCFI2:
 152              		.cfi_remember_state
 153              		.cfi_def_cfa_offset 4
 154              		@ sp needed
 155 00a0 5DF804FB 		ldr	pc, [sp], #4
 156              	.L9:
 157              	.LCFI3:
 158              		.cfi_restore_state
  51:Src/adc.c     ****   }
 159              		.loc 1 51 0
 160 00a4 FFF7FEFF 		bl	Error_Handler
 161              	.LVL6:
 162 00a8 CAE7     		b	.L2
 163              	.L10:
  60:Src/adc.c     ****   }
 164              		.loc 1 60 0
 165 00aa FFF7FEFF 		bl	Error_Handler
 166              	.LVL7:
 167 00ae D2E7     		b	.L3
 168              	.L11:
  68:Src/adc.c     ****   }
 169              		.loc 1 68 0
 170 00b0 FFF7FEFF 		bl	Error_Handler
 171              	.LVL8:
 172 00b4 D8E7     		b	.L4
 173              	.L12:
  76:Src/adc.c     ****   }
 174              		.loc 1 76 0
 175 00b6 FFF7FEFF 		bl	Error_Handler
 176              	.LVL9:
 177 00ba DEE7     		b	.L5
 178              	.L13:
  84:Src/adc.c     ****   }
 179              		.loc 1 84 0
 180 00bc FFF7FEFF 		bl	Error_Handler
 181              	.LVL10:
 182 00c0 E4E7     		b	.L6
 183              	.L14:
  92:Src/adc.c     ****   }
 184              		.loc 1 92 0
 185 00c2 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 6


 186              	.LVL11:
 187              		.loc 1 95 0
 188 00c6 EAE7     		b	.L1
 189              	.L16:
 190              		.align	2
 191              	.L15:
 192 00c8 00000000 		.word	hadc1
 193 00cc 00200140 		.word	1073815552
 194 00d0 0100000F 		.word	251658241
 195              		.cfi_endproc
 196              	.LFE130:
 198              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 199              		.align	1
 200              		.global	HAL_ADC_MspInit
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	HAL_ADC_MspInit:
 207              	.LFB131:
  96:Src/adc.c     **** 
  97:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  98:Src/adc.c     **** {
 208              		.loc 1 98 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 40
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL12:
 213 0000 70B5     		push	{r4, r5, r6, lr}
 214              	.LCFI4:
 215              		.cfi_def_cfa_offset 16
 216              		.cfi_offset 4, -16
 217              		.cfi_offset 5, -12
 218              		.cfi_offset 6, -8
 219              		.cfi_offset 14, -4
 220 0002 8AB0     		sub	sp, sp, #40
 221              	.LCFI5:
 222              		.cfi_def_cfa_offset 56
  99:Src/adc.c     **** 
 100:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 223              		.loc 1 100 0
 224 0004 0023     		movs	r3, #0
 225 0006 0593     		str	r3, [sp, #20]
 226 0008 0693     		str	r3, [sp, #24]
 227 000a 0793     		str	r3, [sp, #28]
 228 000c 0893     		str	r3, [sp, #32]
 229 000e 0993     		str	r3, [sp, #36]
 101:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 230              		.loc 1 101 0
 231 0010 0268     		ldr	r2, [r0]
 232 0012 03F18043 		add	r3, r3, #1073741824
 233 0016 03F59033 		add	r3, r3, #73728
 234 001a 9A42     		cmp	r2, r3
 235 001c 01D0     		beq	.L21
 236              	.LVL13:
 237              	.L17:
 102:Src/adc.c     ****   {
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 7


 103:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 104:Src/adc.c     **** 
 105:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 106:Src/adc.c     ****     /* ADC1 clock enable */
 107:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 108:Src/adc.c     ****   
 109:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 110:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 111:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 112:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 113:Src/adc.c     ****     PC1     ------> ADC1_IN11
 114:Src/adc.c     ****     PA6     ------> ADC1_IN6
 115:Src/adc.c     ****     PA7     ------> ADC1_IN7
 116:Src/adc.c     ****     PC4     ------> ADC1_IN14
 117:Src/adc.c     ****     PB0     ------> ADC1_IN8 
 118:Src/adc.c     ****     */
 119:Src/adc.c     ****     GPIO_InitStruct.Pin = V_BUS_Pin|M_IC_Pin;
 120:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 121:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 122:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 123:Src/adc.c     **** 
 124:Src/adc.c     ****     GPIO_InitStruct.Pin = M_IA_Pin|M_IB_Pin;
 125:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 126:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 127:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 128:Src/adc.c     **** 
 129:Src/adc.c     ****     GPIO_InitStruct.Pin = POT_Pin;
 130:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 131:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 132:Src/adc.c     ****     HAL_GPIO_Init(POT_GPIO_Port, &GPIO_InitStruct);
 133:Src/adc.c     **** 
 134:Src/adc.c     ****     /* ADC1 DMA Init */
 135:Src/adc.c     ****     /* ADC1 Init */
 136:Src/adc.c     ****     hdma_adc1.Instance = DMA2_Stream0;
 137:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 138:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 139:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 140:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 141:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 142:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 143:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 144:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 145:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 146:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 147:Src/adc.c     ****     {
 148:Src/adc.c     ****       Error_Handler();
 149:Src/adc.c     ****     }
 150:Src/adc.c     **** 
 151:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 152:Src/adc.c     **** 
 153:Src/adc.c     ****     /* ADC1 interrupt Init */
 154:Src/adc.c     ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 155:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 156:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 157:Src/adc.c     **** 
 158:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 159:Src/adc.c     ****   }
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 8


 160:Src/adc.c     **** }
 238              		.loc 1 160 0
 239 001e 0AB0     		add	sp, sp, #40
 240              	.LCFI6:
 241              		.cfi_remember_state
 242              		.cfi_def_cfa_offset 16
 243              		@ sp needed
 244 0020 70BD     		pop	{r4, r5, r6, pc}
 245              	.LVL14:
 246              	.L21:
 247              	.LCFI7:
 248              		.cfi_restore_state
 249 0022 0446     		mov	r4, r0
 250              	.LBB2:
 107:Src/adc.c     ****   
 251              		.loc 1 107 0
 252 0024 0025     		movs	r5, #0
 253 0026 0195     		str	r5, [sp, #4]
 254 0028 03F58C33 		add	r3, r3, #71680
 255 002c 5A6C     		ldr	r2, [r3, #68]
 256 002e 42F48072 		orr	r2, r2, #256
 257 0032 5A64     		str	r2, [r3, #68]
 258 0034 5A6C     		ldr	r2, [r3, #68]
 259 0036 02F48072 		and	r2, r2, #256
 260 003a 0192     		str	r2, [sp, #4]
 261 003c 019A     		ldr	r2, [sp, #4]
 262              	.LBE2:
 263              	.LBB3:
 109:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 264              		.loc 1 109 0
 265 003e 0295     		str	r5, [sp, #8]
 266 0040 1A6B     		ldr	r2, [r3, #48]
 267 0042 42F00402 		orr	r2, r2, #4
 268 0046 1A63     		str	r2, [r3, #48]
 269 0048 1A6B     		ldr	r2, [r3, #48]
 270 004a 02F00402 		and	r2, r2, #4
 271 004e 0292     		str	r2, [sp, #8]
 272 0050 029A     		ldr	r2, [sp, #8]
 273              	.LBE3:
 274              	.LBB4:
 110:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 275              		.loc 1 110 0
 276 0052 0395     		str	r5, [sp, #12]
 277 0054 1A6B     		ldr	r2, [r3, #48]
 278 0056 42F00102 		orr	r2, r2, #1
 279 005a 1A63     		str	r2, [r3, #48]
 280 005c 1A6B     		ldr	r2, [r3, #48]
 281 005e 02F00102 		and	r2, r2, #1
 282 0062 0392     		str	r2, [sp, #12]
 283 0064 039A     		ldr	r2, [sp, #12]
 284              	.LBE4:
 285              	.LBB5:
 111:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 286              		.loc 1 111 0
 287 0066 0495     		str	r5, [sp, #16]
 288 0068 1A6B     		ldr	r2, [r3, #48]
 289 006a 42F00202 		orr	r2, r2, #2
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 9


 290 006e 1A63     		str	r2, [r3, #48]
 291 0070 1B6B     		ldr	r3, [r3, #48]
 292 0072 03F00203 		and	r3, r3, #2
 293 0076 0493     		str	r3, [sp, #16]
 294 0078 049B     		ldr	r3, [sp, #16]
 295              	.LBE5:
 119:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 296              		.loc 1 119 0
 297 007a 1223     		movs	r3, #18
 298 007c 0593     		str	r3, [sp, #20]
 120:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 299              		.loc 1 120 0
 300 007e 0326     		movs	r6, #3
 301 0080 0696     		str	r6, [sp, #24]
 122:Src/adc.c     **** 
 302              		.loc 1 122 0
 303 0082 05A9     		add	r1, sp, #20
 304 0084 1D48     		ldr	r0, .L23
 305              	.LVL15:
 306 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 307              	.LVL16:
 124:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 308              		.loc 1 124 0
 309 008a C023     		movs	r3, #192
 310 008c 0593     		str	r3, [sp, #20]
 125:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 311              		.loc 1 125 0
 312 008e 0696     		str	r6, [sp, #24]
 126:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 313              		.loc 1 126 0
 314 0090 0795     		str	r5, [sp, #28]
 127:Src/adc.c     **** 
 315              		.loc 1 127 0
 316 0092 05A9     		add	r1, sp, #20
 317 0094 1A48     		ldr	r0, .L23+4
 318 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL17:
 129:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 320              		.loc 1 129 0
 321 009a 0123     		movs	r3, #1
 322 009c 0593     		str	r3, [sp, #20]
 130:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 323              		.loc 1 130 0
 324 009e 0696     		str	r6, [sp, #24]
 131:Src/adc.c     ****     HAL_GPIO_Init(POT_GPIO_Port, &GPIO_InitStruct);
 325              		.loc 1 131 0
 326 00a0 0795     		str	r5, [sp, #28]
 132:Src/adc.c     **** 
 327              		.loc 1 132 0
 328 00a2 05A9     		add	r1, sp, #20
 329 00a4 1748     		ldr	r0, .L23+8
 330 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 331              	.LVL18:
 136:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 332              		.loc 1 136 0
 333 00aa 1748     		ldr	r0, .L23+12
 334 00ac 174B     		ldr	r3, .L23+16
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 10


 335 00ae 0360     		str	r3, [r0]
 137:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 336              		.loc 1 137 0
 337 00b0 4560     		str	r5, [r0, #4]
 138:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 338              		.loc 1 138 0
 339 00b2 8560     		str	r5, [r0, #8]
 139:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 340              		.loc 1 139 0
 341 00b4 C560     		str	r5, [r0, #12]
 140:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 342              		.loc 1 140 0
 343 00b6 4FF48063 		mov	r3, #1024
 344 00ba 0361     		str	r3, [r0, #16]
 141:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 345              		.loc 1 141 0
 346 00bc 4FF40063 		mov	r3, #2048
 347 00c0 4361     		str	r3, [r0, #20]
 142:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 348              		.loc 1 142 0
 349 00c2 4FF40053 		mov	r3, #8192
 350 00c6 8361     		str	r3, [r0, #24]
 143:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 351              		.loc 1 143 0
 352 00c8 4FF48073 		mov	r3, #256
 353 00cc C361     		str	r3, [r0, #28]
 144:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 354              		.loc 1 144 0
 355 00ce 4FF40033 		mov	r3, #131072
 356 00d2 0362     		str	r3, [r0, #32]
 145:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 357              		.loc 1 145 0
 358 00d4 4562     		str	r5, [r0, #36]
 146:Src/adc.c     ****     {
 359              		.loc 1 146 0
 360 00d6 FFF7FEFF 		bl	HAL_DMA_Init
 361              	.LVL19:
 362 00da 58B9     		cbnz	r0, .L22
 363              	.L19:
 151:Src/adc.c     **** 
 364              		.loc 1 151 0
 365 00dc 0A4B     		ldr	r3, .L23+12
 366 00de A363     		str	r3, [r4, #56]
 367 00e0 9C63     		str	r4, [r3, #56]
 154:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 368              		.loc 1 154 0
 369 00e2 0022     		movs	r2, #0
 370 00e4 1146     		mov	r1, r2
 371 00e6 1220     		movs	r0, #18
 372 00e8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 373              	.LVL20:
 155:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 374              		.loc 1 155 0
 375 00ec 1220     		movs	r0, #18
 376 00ee FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 377              	.LVL21:
 378              		.loc 1 160 0
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 11


 379 00f2 94E7     		b	.L17
 380              	.L22:
 148:Src/adc.c     ****     }
 381              		.loc 1 148 0
 382 00f4 FFF7FEFF 		bl	Error_Handler
 383              	.LVL22:
 384 00f8 F0E7     		b	.L19
 385              	.L24:
 386 00fa 00BF     		.align	2
 387              	.L23:
 388 00fc 00080240 		.word	1073874944
 389 0100 00000240 		.word	1073872896
 390 0104 00040240 		.word	1073873920
 391 0108 00000000 		.word	hdma_adc1
 392 010c 10640240 		.word	1073898512
 393              		.cfi_endproc
 394              	.LFE131:
 396              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 397              		.align	1
 398              		.global	HAL_ADC_MspDeInit
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	HAL_ADC_MspDeInit:
 405              	.LFB132:
 161:Src/adc.c     **** 
 162:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 163:Src/adc.c     **** {
 406              		.loc 1 163 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              	.LVL23:
 164:Src/adc.c     **** 
 165:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 411              		.loc 1 165 0
 412 0000 0268     		ldr	r2, [r0]
 413 0002 0F4B     		ldr	r3, .L32
 414 0004 9A42     		cmp	r2, r3
 415 0006 00D0     		beq	.L31
 416 0008 7047     		bx	lr
 417              	.L31:
 163:Src/adc.c     **** 
 418              		.loc 1 163 0
 419 000a 10B5     		push	{r4, lr}
 420              	.LCFI8:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 4, -8
 423              		.cfi_offset 14, -4
 424 000c 0446     		mov	r4, r0
 166:Src/adc.c     ****   {
 167:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 168:Src/adc.c     **** 
 169:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 170:Src/adc.c     ****     /* Peripheral clock disable */
 171:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 12


 425              		.loc 1 171 0
 426 000e 0D4A     		ldr	r2, .L32+4
 427 0010 536C     		ldr	r3, [r2, #68]
 428 0012 23F48073 		bic	r3, r3, #256
 429 0016 5364     		str	r3, [r2, #68]
 172:Src/adc.c     ****   
 173:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 174:Src/adc.c     ****     PC1     ------> ADC1_IN11
 175:Src/adc.c     ****     PA6     ------> ADC1_IN6
 176:Src/adc.c     ****     PA7     ------> ADC1_IN7
 177:Src/adc.c     ****     PC4     ------> ADC1_IN14
 178:Src/adc.c     ****     PB0     ------> ADC1_IN8 
 179:Src/adc.c     ****     */
 180:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, V_BUS_Pin|M_IC_Pin);
 430              		.loc 1 180 0
 431 0018 1221     		movs	r1, #18
 432 001a 0B48     		ldr	r0, .L32+8
 433              	.LVL24:
 434 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 435              	.LVL25:
 181:Src/adc.c     **** 
 182:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, M_IA_Pin|M_IB_Pin);
 436              		.loc 1 182 0
 437 0020 C021     		movs	r1, #192
 438 0022 0A48     		ldr	r0, .L32+12
 439 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 440              	.LVL26:
 183:Src/adc.c     **** 
 184:Src/adc.c     ****     HAL_GPIO_DeInit(POT_GPIO_Port, POT_Pin);
 441              		.loc 1 184 0
 442 0028 0121     		movs	r1, #1
 443 002a 0948     		ldr	r0, .L32+16
 444 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 445              	.LVL27:
 185:Src/adc.c     **** 
 186:Src/adc.c     ****     /* ADC1 DMA DeInit */
 187:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 446              		.loc 1 187 0
 447 0030 A06B     		ldr	r0, [r4, #56]
 448 0032 FFF7FEFF 		bl	HAL_DMA_DeInit
 449              	.LVL28:
 188:Src/adc.c     **** 
 189:Src/adc.c     ****     /* ADC1 interrupt Deinit */
 190:Src/adc.c     ****     HAL_NVIC_DisableIRQ(ADC_IRQn);
 450              		.loc 1 190 0
 451 0036 1220     		movs	r0, #18
 452 0038 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 453              	.LVL29:
 191:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 192:Src/adc.c     **** 
 193:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 194:Src/adc.c     ****   }
 195:Src/adc.c     **** } 
 454              		.loc 1 195 0
 455 003c 10BD     		pop	{r4, pc}
 456              	.LVL30:
 457              	.L33:
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 13


 458 003e 00BF     		.align	2
 459              	.L32:
 460 0040 00200140 		.word	1073815552
 461 0044 00380240 		.word	1073887232
 462 0048 00080240 		.word	1073874944
 463 004c 00000240 		.word	1073872896
 464 0050 00040240 		.word	1073873920
 465              		.cfi_endproc
 466              	.LFE132:
 468              		.comm	hdma_adc1,96,4
 469              		.comm	hadc1,72,4
 470              		.text
 471              	.Letext0:
 472              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 473              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 474              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 475              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 476              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 477              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 478              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 479              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 480              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 481              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 482              		.file 12 "Inc/adc.h"
 483              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 484              		.file 14 "Inc/main.h"
ARM GAS  C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:18     .text.MX_ADC1_Init:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:192    .text.MX_ADC1_Init:000000c8 $d
                            *COM*:00000048 hadc1
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:199    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:206    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:388    .text.HAL_ADC_MspInit:000000fc $d
                            *COM*:00000060 hdma_adc1
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:397    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:404    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\Cairne\AppData\Local\Temp\cc5VX35a.s:460    .text.HAL_ADC_MspDeInit:00000040 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
